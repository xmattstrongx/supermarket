openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Supermarket
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
paths:
  /produce:
    get:
      summary: List all produce
      operationId: listProduce
      tags:
        - produce
      parameters:
        - name: sort_by
          in: query
          description: which field to sort the results by
          required: false
          schema:
            type: string
            enum: 
              - name
              - unitprice
              - producecode
        - name: order
          in: query
          description: specify ascending or descending order. Default is Ascending.
          required: false
          schema:
            type: string
            enum: 
              - desc
              - descending
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: How many items to offset before the start of the returned values
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of produce
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Produces"
    post:
      summary: Create new produce
      description: Creates a new produce in the inventory.  Duplicates are not allowed
      operationId: createProduce
      required: true
      requestBody:
        description: Produce to add to the inventory
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/produce'
            example:
              name: poo pourri
              produceCode: POO1-POO2-POO3-POO4
              unitPrice: 6.01
      tags:
        - produce
      responses:
        '201':
          description: Null response
        '400':
          description: unexpected error
        '404':
          description: unexpected error
  /produce/{produceId}:
    delete:
      summary: Delete a specific produce
      operationId: deleteProduceById
      tags:
        - produce
      parameters:
        - name: produceId
          in: path
          required: true
          description: The id of the produce to delete
          schema:
            type: string
      responses:
        '204':
          description: 204 response regardless of whether or not the request succeeds or fails
components:
  schemas:
    Produce:
      required:
        - name
        - produceCode
        - unitPrice
      properties:
        name:
          type: string
        produceCode:
          type: string
        unitPrice:
          type: number
          format: float64
    Produces:
      type: array
      items:
        $ref: "#/components/schemas/Produce"
    CreateProduceMultiResponse:
      type: object
      properties:
        created:
          $ref: "#/components/schemas/Produce"
        createFailed:
          $ref: "#/components/schemas/Produce"